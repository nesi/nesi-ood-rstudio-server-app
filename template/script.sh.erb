#!/usr/bin/env bash
module purge

# load RStudio Server
module load <%= context.Rserver %>

# load R
module load <%= context.Rapp %>

# load additional Modules
module load Python/3.11.6-foss-2023a

#Only use the following if the os doesn't have pdflatex
#module load TeXLive/2022

# RStudioServer doesn't inherit "ulimit -s" from system config /etc/security/limits.d/custom.conf
# Therefore, we are setting it here

ulimit -s unlimited

#
# Start RStudio Server
#

# PAM auth helper used by RStudio
TMPDIR="$(mktemp -d)"
export WORKING_DIR="<%= session.staged_root %>"
export RSTUDIO_AUTH="$WORKING_DIR/bin/auth"

#Try above first as auth wasn't working correctly with the following
#export RSTUDIO_AUTH="${PWD}/bin/auth"

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="$WORKING_DIR/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash

  # Log all output from this script
  export RSESSION_LOG_FILE="$WORKING_DIR/rsession.log"
  exec &>>"\${RSESSION_LOG_FILE}"


  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"

# Generate a database.conf file
export DBCONF="${PWD}/database.conf"
(
umask 077
sed 's/^ \{2\}//' > "${DBCONF}" << EOL
  # set database location
  provider=sqlite
  directory=/tmp/${USER}/${SLURM_JOB_ID}/rstudio-server/db
EOL
)
chmod 700 "${DBCONF}"

# Set working directory to home directory
cd "${HOME}"

# Output debug info
module list

# Launch the RStudio Server
echo "Starting up rserver..."
set -x
rserver \
  --www-port ${port} \
  --auth-none 0 \
  --auth-pam-helper-path "${RSTUDIO_AUTH}" \
  --auth-encrypt-password 0 \
  --rsession-path "${RSESSION_WRAPPER_FILE}" \
  --server-data-dir "${TMPDIR}" \
  --secure-cookie-key-file "${TMPDIR}/rstudio-server/secure-cookie-key" \
  --database-config-file "${DBCONF}" \
  --server-user $(whoami)
