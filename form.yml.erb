<%-
  groups = OodSupport::User.new.groups.sort_by(&:id).tap { |groups|
    groups.unshift(groups.delete(OodSupport::Process.group))
  }.map(&:name).grep(/.*[0-9]{5}/)

  all_groups = OodSupport::User.new.groups.sort_by(&:id).tap { |groups|
    groups.unshift(groups.delete(OodSupport::Process.group))
  }.map(&:name)
  has_slurm_apps = all_groups.include?("nesi-staff") || all_groups.include?("ondemand-slurm-apps")
-%>

# Batch Connect app configuration file
#
# @note Used to define the submitted cluster, title, description, and
#   hard-coded/user-defined attributes that make up this Batch Connect app.
---

form:
  - cluster
  - account
  - rserver
  - rapp
  - additional_modules
  - bc_num_hours
  - num_cores
  - num_mem
  - gpu
  - node
description: Request a RStudio-Server
submit: submit.yml.erb
title: RStudio-Server


# Define attribute values that aren't meant to be modified by the user within
# the Dashboard form
attributes:
  # select which cluster the app should run on
  cluster:
    widget: "select"
    options:
      - [
          "Kubernetes", "my-k8s-cluster",
          data-hide-gpu: true,
          data-set-gpu: 'none',
        ]
<% if has_slurm_apps %>
      - ["Slurm HPC", "nesi_tdc_hpc"]
    help: |
      Kubernetes jobs are more likely to start promptly - "Slurm HPC" jobs may have to wait in the queue.
      If you need Apptainer or GPUs then you must choose "Slurm HPC" currently.
<% end %>
    cacheable: false  # we always want k8s on top as the default?

  # select RStudio-Server module
  rserver:
    widget: select
    label: "RStudio-Server Version"
    options:
      - [ "2024.12.1-563", "RStudio-Server/2024.12.1-563" ]
    display: true

  # select the R module(s) that should be loaded
  rapp:
    widget: select
    label: "R Version"
    options:
      - [ "4.3.2", "R/4.3.2-foss-2023a" ]
      - [ "4.3.1", "R/4.3.1-gimkl-2022a" ]
      - [ "4.2.1", "R/4.2.1-gimkl-2022a" ]
      - ["Bioconductor-3.17", "R-bundle-Bioconductor/3.17-gimkl-2022a-R-4.3.1"]
      - ["R-Geo/4.3.2", "R-Geo/4.3.2-foss-2023a"]
      - ["R-Geo/4.2.1", "R-Geo/4.2.1-gimkl-2022a"]
    display: true

  # Additional modules selection
  additional_modules:
    widget: select
    label: "Additional Modules (optional)"
    multiple: true
    options:
      - ["None", ""]
      <%- 
      # Get available modules dynamically from LMOD paths
      begin
        module_paths = ["/opt/nesi/lmod/generic", "/opt/nesi/lmod/zen3", "/opt/nesi/lmod/mahuika"]
        available_modules = []
        
        module_paths.each do |base_path|
          if File.directory?(base_path)
            Dir.glob("#{base_path}/**/*.lua").each do |file|
              # Extract module name from file path
              relative_path = file.sub("#{base_path}/", "")
              module_name = relative_path.sub(/\.lua$/, "")
              
              # Skip R-related modules since they're handled separately
              next if module_name =~ /^R\// || 
                     module_name =~ /^R-/ ||
                     module_name =~ /RStudio/ ||
                     module_name =~ /^r-/ ||
                     module_name =~ /Bioconductor/
              
              # Skip very common base modules that are typically auto-loaded
              next if ["NeSI/zen3", "NeSI/mahuika"].include?(module_name)
              
              available_modules << module_name
            end
          end
        end
        
        # Sort modules and create options
        available_modules.uniq.sort.each do |mod|
          # Create a friendly display name
          display_name = mod.include?('/') ? "#{mod.split('/').first}/#{mod.split('/').last}" : mod
      -%>
      - ["<%= display_name %>", "<%= mod %>"]
      <%- 
        end
      rescue => e
        # Fallback to some common modules if dynamic discovery fails
        fallback_modules = [
          "GCC/11.3.0", "GCC/12.3.0", "CMake/3.24.3", "CMake/3.27.6",
          "GDAL/3.5.0", "GDAL/3.7.1", "HDF5/1.12.2", "HDF5/1.14.0",
          "NetCDF/4.9.0", "NetCDF/4.9.2", "GSL/2.7", "FFTW/3.3.10",
          "OpenMPI/4.1.4", "CUDA/11.7.0", "CUDA/12.2.0"
        ]
        fallback_modules.each do |mod|
      -%>
      - ["<%= mod %>", "<%= mod %>"]
      <%- 
        end
      end
      -%>
    help: |
      Select additional modules needed for R package dependencies (e.g., compilers, libraries).
      Hold Ctrl/Cmd to select multiple modules. These will be loaded alongside your chosen R version.
      Common choices: GCC (compilers), GDAL (geospatial), HDF5/NetCDF (data formats), GSL (scientific computing).
    display: true

  # Any extra command line arguments to feed to the `jupyter notebook ...`
  # command that launches the Jupyter notebook within the batch job
  
  node: ""
  account:
    label: "Project Code"
    widget: select
    options:
      <%- groups.each do |group| %>
      - "<%= group %>"
      <%- end %>
    required: true
    display: true
  bc_num_hours:
    max: 8
    min: 1
    step: 1
    value: 1
    widget: number_field
  num_cores:
    label: Number of cores
    max: 16
    min: 1
    value: 2
    widget: number_field
    display: true
  num_mem:
    label: Memory per job (GB)
    max: 32
    min: 1
    step: 1
    value: 1
    widget: number_field
    display: true
  gpu:
    label: GPU
    widget: select
    options:
      - 'none'
      - [ "L4 (24 GB VRAM, aimed at AI workloads, up to single precision)", 'L4' ]
      - [ "H100 (96 GB VRAM, recommend submitting as Slurm jobs due to potential wait times)", "H100" ]
    help: |
      **WARNING**: selecting a GPU can significantly increase the time it takes for your session to start!
    display: true

# All of the attributes that make up the Dashboard form (in respective order),
# and made available to the submit configuration file and the template ERB
# files
#
# @note You typically do not need to modify this unless you want to add a new
#   configurable value
# @note If an attribute listed below is hard-coded above in the `attributes`
#   option, then it will not appear in the form page that the user sees in the
#   Dashboard
